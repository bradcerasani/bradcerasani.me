---
import { Container, Footer } from 'src/components';
import 'src/styles/_settings.css';
import 'src/styles/animations.css';
import 'src/styles/base.css';
import 'src/styles/fonts.css';
import 'src/styles/utilities.css';
import { stripTags } from 'src/utils';

const { metaTitle, metaDescription, metaImage, metaSlug } = Astro.props;

const title = stripTags(metaTitle ?? 'Brad Cerasani');
const description = metaDescription || 'Designer, engineer, etc.';
const image = metaImage ? metaImage.replace('./', '/') : 'brad-cerasani-office-wide.jpg';
const imageUrl = `https://bradcerasani.me/images${image}?w=1600`;
const url = `https://bradcerasani.me${metaSlug ?? ''}`;
---

<script>
  const images = document.querySelectorAll('img');

  images.forEach((img) => {
    img.classList.add('js-is-loading');

    const handleLoad = () => {
      img.classList.remove('js-is-loading');
    };

    if (img.complete) {
      handleLoad();
    } else {
      img.onload = handleLoad;
    }
  });

  if (localStorage.getItem('BROWSER') === 'ARC') {
    addArcClassToBody();
  } else {
    attemptToDetectArcTheme();
  }

  function addArcClassToBody() {
    document.body?.classList.add('js-browser-arc');
  }

  function attemptToDetectArcTheme() {
    let attempt = 0;
    let interval = 50;
    const maxAttempts = 3;
    const properties = [
      '--arc-palette-title',
      '--arc-palette-subtitle',
      '--arc-palette-background',
    ];

    function tryDetect() {
      const isArc = properties.some((property) => {
        return window.getComputedStyle(document.documentElement).getPropertyValue(property) !== '';
      });

      if (isArc) {
        localStorage.setItem('BROWSER', 'ARC');
        addArcClassToBody();
        return;
      } else if (attempt >= maxAttempts) {
        return;
      }

      attempt++;
      interval *= attempt;
      setTimeout(tryDetect, interval);
    }

    tryDetect();
  }
</script>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>{title}</title>

    <link href="/favicon.svg" rel="icon" type="image/svg+xml" />

    <meta name="robots" content="index,follow" />
    <meta name="googlebot" content="index,follow" />

    <link rel="canonical" href={url} />
    <meta name="description" content={description} />

    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={url} />
    <meta property="og:image" content={imageUrl} />

    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:url" content={url} />
    <meta name="twitter:image" content={imageUrl} />
    <meta name="twitter:site:id" content="@bradcerasani" />
    <meta name="twitter:creator" content="@bradcerasani" />

    <!-- Note: equivalent to var(--backgroundColor) -->
    <meta name="theme-color" content="hsl(60, 2%, 98%)" media="(prefers-color-scheme: light)" />
  </head>
  <body>
    <Container>
      <slot />
    </Container>

    <Footer client:idle />
  </body>
</html>
